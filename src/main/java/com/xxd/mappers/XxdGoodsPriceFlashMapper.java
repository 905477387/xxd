package com.xxd.mappers;

import com.xxd.models.XxdGoodsPriceFlash;

import java.util.ArrayList;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface XxdGoodsPriceFlashMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods_price_flash
     *
     * @mbggenerated
     */
    @Delete({
        "delete from xxd_goods_price_flash",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods_price_flash
     *
     * @mbggenerated
     */
    @Insert({
        "insert into xxd_goods_price_flash (id, goods_flash_id, ",
        "goods_price_stock, format_name, ",
        "market_price, member_price, ",
        "flash_member_price, img, ",
        "price, goods_price_stock_bak)",
        "values (#{id,jdbcType=INTEGER}, #{goodsFlashId,jdbcType=INTEGER}, ",
        "#{goodsPriceStock,jdbcType=INTEGER}, #{formatName,jdbcType=VARCHAR}, ",
        "#{marketPrice,jdbcType=DECIMAL}, #{memberPrice,jdbcType=DECIMAL}, ",
        "#{flashMemberPrice,jdbcType=DECIMAL}, #{img,jdbcType=VARCHAR}, ",
        "#{price,jdbcType=DECIMAL}, #{goodsPriceStockBak,jdbcType=INTEGER})"
    })
    int insert(XxdGoodsPriceFlash record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods_price_flash
     *
     * @mbggenerated
     */
    @InsertProvider(type=XxdGoodsPriceFlashSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true, keyProperty="id", keyColumn="id")
    int insertSelective(XxdGoodsPriceFlash record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods_price_flash
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, goods_flash_id, goods_price_stock, format_name, market_price, member_price, ",
        "flash_member_price, img, price, goods_price_stock_bak",
        "from xxd_goods_price_flash",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="goods_flash_id", property="goodsFlashId", jdbcType=JdbcType.INTEGER),
        @Result(column="goods_price_stock", property="goodsPriceStock", jdbcType=JdbcType.INTEGER),
        @Result(column="format_name", property="formatName", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="member_price", property="memberPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="flash_member_price", property="flashMemberPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price_stock_bak", property="goodsPriceStockBak", jdbcType=JdbcType.INTEGER)
    })
    XxdGoodsPriceFlash selectByPrimaryKey(Integer id);
    
    @Select({
        "select",
        "id, goods_flash_id, goods_price_stock, format_name, market_price, member_price, ",
        "flash_member_price, img, price, goods_price_stock_bak",
        "from xxd_goods_price_flash",
        "where goods_flash_id = #{goods_flash_id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="goods_flash_id", property="goodsFlashId", jdbcType=JdbcType.INTEGER),
        @Result(column="goods_price_stock", property="goodsPriceStock", jdbcType=JdbcType.INTEGER),
        @Result(column="format_name", property="formatName", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="member_price", property="memberPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="flash_member_price", property="flashMemberPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price_stock_bak", property="goodsPriceStockBak", jdbcType=JdbcType.INTEGER)
    })
    ArrayList<XxdGoodsPriceFlash> selectByGoodsFlashId(Integer goods_flash_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods_price_flash
     *
     * @mbggenerated
     */
    @UpdateProvider(type=XxdGoodsPriceFlashSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(XxdGoodsPriceFlash record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_goods_price_flash
     *
     * @mbggenerated
     */
    @Update({
        "update xxd_goods_price_flash",
        "set goods_flash_id = #{goodsFlashId,jdbcType=INTEGER},",
          "goods_price_stock = #{goodsPriceStock,jdbcType=INTEGER},",
          "format_name = #{formatName,jdbcType=VARCHAR},",
          "market_price = #{marketPrice,jdbcType=DECIMAL},",
          "member_price = #{memberPrice,jdbcType=DECIMAL},",
          "flash_member_price = #{flashMemberPrice,jdbcType=DECIMAL},",
          "img = #{img,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=DECIMAL},",
          "goods_price_stock_bak = #{goodsPriceStockBak,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(XxdGoodsPriceFlash record);
}