package com.xxd.mappers;

import com.xxd.models.XxdCProxyArea;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface XxdCProxyAreaMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_c_proxy_area
     *
     * @mbggenerated
     */
    @Delete({
        "delete from xxd_c_proxy_area",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_c_proxy_area
     *
     * @mbggenerated
     */
    @Insert({
        "insert into xxd_c_proxy_area (id, areaid, ",
        "areaname, areatype_id, ",
        "remark, longitude, ",
        "latitude, protocol, ",
        "stat)",
        "values (#{id,jdbcType=INTEGER}, #{areaid,jdbcType=VARCHAR}, ",
        "#{areaname,jdbcType=VARCHAR}, #{areatypeId,jdbcType=SMALLINT}, ",
        "#{remark,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, ",
        "#{latitude,jdbcType=DECIMAL}, #{protocol,jdbcType=VARCHAR}, ",
        "#{stat,jdbcType=CHAR})"
    })
    int insert(XxdCProxyArea record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_c_proxy_area
     *
     * @mbggenerated
     */
    @InsertProvider(type=XxdCProxyAreaSqlProvider.class, method="insertSelective")
    int insertSelective(XxdCProxyArea record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_c_proxy_area
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, areaid, areaname, areatype_id, remark, longitude, latitude, protocol, stat",
        "from xxd_c_proxy_area",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="areaid", property="areaid", jdbcType=JdbcType.VARCHAR),
        @Result(column="areaname", property="areaname", jdbcType=JdbcType.VARCHAR),
        @Result(column="areatype_id", property="areatypeId", jdbcType=JdbcType.SMALLINT),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="longitude", property="longitude", jdbcType=JdbcType.DECIMAL),
        @Result(column="latitude", property="latitude", jdbcType=JdbcType.DECIMAL),
        @Result(column="protocol", property="protocol", jdbcType=JdbcType.VARCHAR),
        @Result(column="stat", property="stat", jdbcType=JdbcType.CHAR)
    })
    XxdCProxyArea selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_c_proxy_area
     *
     * @mbggenerated
     */
    @UpdateProvider(type=XxdCProxyAreaSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(XxdCProxyArea record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xxd_c_proxy_area
     *
     * @mbggenerated
     */
    @Update({
        "update xxd_c_proxy_area",
        "set areaid = #{areaid,jdbcType=VARCHAR},",
          "areaname = #{areaname,jdbcType=VARCHAR},",
          "areatype_id = #{areatypeId,jdbcType=SMALLINT},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "longitude = #{longitude,jdbcType=DECIMAL},",
          "latitude = #{latitude,jdbcType=DECIMAL},",
          "protocol = #{protocol,jdbcType=VARCHAR},",
          "stat = #{stat,jdbcType=CHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(XxdCProxyArea record);
}